<template>
  <div class="container">
      <div class="count flex-row">
          <div class="flex-1">
              <text class="main-sub-text text-center">累计已投</text>
              <text class="color-blue text-center">{{resData.totalAmount}}</text>

          </div>
          <div class="line"></div>
          <div class="flex-1">
              <text class="main-sub-text text-center">累计已赚收益</text>
              <text class="color-blue text-center">{{resData.totalInterest}}</text>
          </div>
      </div>
      <div class="tab border-top flex-row">
          <div class="flex-1" onclick="tabChange" status='0'>
              <text class="tab-nav">全部</text>
              <div class="tab-line" if="{{status == 0}}"></div>
          </div>
          <div class="flex-1" onclick="tabChange" status='1'>
              <text class="tab-nav">未还完</text>
              <div class="tab-line" if="{{status == 1}}"></div>
          </div>
          <div class="flex-1" onclick="tabChange" status='2'>
              <text class="tab-nav">已还完</text>
              <div class="tab-line" if="{{status == 2}}"></div>
          </div>
      </div>
      <list class="list">
          <refresh  class = "refresh-view" display="{{refresh_display}}" onrefresh="onrefresh">
              <text if="{{(refresh_display==='hide')}}"> ↓ pull to refresh </text>
              <loading-indicator class="indicator"></loading-indicator>
          </refresh>
          <cell class="cell" onappear="onappear" ondisappear="ondisappear" repeat="{{rows}}" index="{{$index}}">
              <div class="item">
                <text class="item-title">row {{id}}</text>
              </div>
          </cell>
          <loading class="loading-view" display="{{loading_display}}" onloading="onloading">
               <text if="{{(loading_display==='hide')}}">↑ Loadmore </text>
               <loading-indicator class="indicator"></loading-indicator>
          </loading>
      </list>
  </div>
</template>

<script>

var storage = require('@weex-module/storage');
var stream = require('@weex-module/stream');
var util = require('./utils/util.js');

module.exports = {
    data: {
      resData:{},
      status: "0",
      isLogin: false,
      deviceWidth:'',
      noData:false,
      refresh_display: 'hide',
      loading_display: 'hide',
      appearMin:1,
      appearMax:1,
      appearIds:[],
      rows:[
        {id: 1},
        {id: 2},
        {id: 3},
        {id: 4},
        {id: 5},
        {id: 6},
        {id: 7},
        {id: 8},
        {id: 9},
        {id: 10},
        {id: 11},
        {id: 12},
        {id: 13},
        {id: 14},
        {id: 15},
        {id: 16},
        {id: 17},
        {id: 18},
        {id: 19},
        {id: 20},
        {id: 21},
        {id: 22},
        {id: 23},
        {id: 24},
        {id: 25},
        {id: 26},
        {id: 27},
        {id: 28},
        {id: 29}
      ],
      moreRows: [
        {id: 30},
        {id: 31},
        {id: 32},
        {id: 33}
      ]
    },
    init:function() {
      // 页面初始化 options为页面跳转所带来的参数
    },
    created: function () {
        this.getData();
    },
    ready: function() {

    },
    methods: {
        onappear: function (e) {
            var appearId = this.rows[e.target.attr.index].id;
            nativeLog('+++++', appearId);
            var appearIds = this.appearIds;
            appearIds.push(appearId);
            this.getMinAndMaxIds(appearIds);
       },
       ondisappear:function (e) {
            var disAppearId = this.rows[e.target.attr.index].id;
            nativeLog('+++++', disAppearId);
            var appearIds = this.appearIds;
            var index = appearIds.indexOf(disAppearId);
            if (index > -1) {
              appearIds.splice(index, 1);
            }
            this.getMinAndMaxIds(appearIds);
        },
        getMinAndMaxIds:function (appearIds) {
            appearIds.sort(function(a, b) {
              return a - b;
            });
            this.appearIds = appearIds;
            this.appearMax = appearIds[appearIds.length - 1];
            this.appearMin = appearIds[0];
       },
       onrefresh: function(e) {
           var self = this;
           self.refresh_display = 'show';
           self.$call('modal', 'toast', {
             'message': 'onrefresh'
           });

           this.$call('timer', 'setTimeout', function () {
             self.refresh_display = 'hide';
           }, 3000);
       },
       onloading: function() {
           var self = this;
           self.loading_display = 'show';
           self.$call('modal', 'toast', {
             'message': 'onloading'
           });

           this.$call('timer', 'setTimeout', function () {
             if (self.rows.length <= 33) {
                 self.rows.push(self.moreRows[self.rows.length - 29]);
               }
             self.loading_display = 'hide';
           }, 3000);
       },
        tabChange:function (e) {
             this.status =  e.target.attr.status;
        },
        getData:function () {
            var _this = this;
            stream.fetch({
                url: util.config.api + "investList",
                method: util.config.method,
                body: "",
                type:'json',
                headers: {
                        'content-type': 'application/x-www-form-urlencoded'
                        }
                },function (res) {
                    var resData = {
                        totalAmount:'2566.66',//总金额
                        totalInterest:'1566.33',//总利息
                        totalNum:'1000',//条数
                        totalPage:'2123.35',//页数
                        lists:res.data.data.list
                    }

                    _this.resData = resData;
                    console.log(_this.resData);

                })

        }

    }
}
</script>

<style lang="css">
.container{
    background-color: #f2f3f7;
}
.text-center{
    text-align: center;
}
.flex-row{
    flex-direction: row;
}
.flex-1{
    flex: 1;
}
.border-top{
    border-top-width:1px;
    border-top-color: #ccc;
    border-top-style: solid;
}
.line{
    height: 36px;
    width: 1px;
    background-color: #ccc;
}
.count{
    padding-top: 60px;
    padding-bottom: 60px;
    background-color: #fff;
}
.color-blue{
    color: #32c1d4;
    font-size: 32px;
}
.tab{
    background-color: #fff;
}
.tab-nav{
    text-align: center;
    padding-top: 25px;
    padding-bottom: 25px;
}
.tab-line{
    height: 5px;
    background-color: #32c1d4;
    width: 100px;
    margin-left: 75px;
}
.main-sub-text{
    font-size: 24px;
    color: #888;
}





.item {
    justify-content: center;
    border-bottom-width: 2;
    border-bottom-color: #c0c0c0;
    height: 100;
    padding:20;
  }

  .refresh-view {
   width: 750;
   height: 100;
   display: -ms-flex;
   display: -webkit-flex;
   display: flex;
   -ms-flex-align: center;
   -webkit-align-items: center;
   -webkit-box-align: center;
   align-items: center;
 }
 .loading-view {
   width: 750;
   height: 100;
   display: -ms-flex;
   display: -webkit-flex;
   display: flex;
   -ms-flex-align: center;
   -webkit-align-items: center;
   -webkit-box-align: center;
   align-items: center;
 }
 .indicator {
   height: 60;
   width: 60;
   color: #889967;
 }

 .indicator {
    height: 40;
    width: 40;
    color:#45b5f0;
  }

  .refresh-arrow {
    font-size: 30px;
    color: #45b5f0;
  }

</style>
